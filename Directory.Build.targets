<Project>

  <PropertyGroup>
    <ArtifactsPath Condition=" '$(ArtifactsPath)' == '' ">$(BaseArtifactsPath)$(MSBuildProjectName)\</ArtifactsPath>
    <CoreBuildDependsOn>$(CoreBuildDependsOn);_CheckVersion</CoreBuildDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="all"/>
    <PackageReference Include="DotNet.ReproducibleBuilds" Version="1.1.1" PrivateAssets="all"/>
  </ItemGroup>

  <ItemGroup Condition=" '$(IsTestProject)' == 'true' ">
    <PackageReference Include="coverlet.collector" Version="6.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="FluentAssertions" Version="6.12.0" />
    <PackageReference Include="FluentAssertions.Analyzers" Version="0.31.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.9.0" />
    <PackageReference Include="xunit" Version="2.7.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.5.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition=" '$(IsPackable)' == 'true' ">
    <PackageReference Include="Microsoft.Build.Artifacts" Version="6.1.10" PrivateAssets="all" 
      IncludeAssets="build; buildtransitive; buildMultiTargeting" />
  </ItemGroup>

  <PropertyGroup Condition=" '$(VersionFilePath)' == '' ">
    <VersionFilePath>$([MSBuild]::GetPathOfFileAbove('Version.props', '$(MSBuildProjectDirectory)'))</VersionFilePath>
  </PropertyGroup>

  <Import Project="$(VersionFilePath)" Condition="Exists('$(VersionFilePath)')" />

  <Target Name="_CheckVersion">
    <Error Condition="!Exists('$(VersionFilePath)')" Text="Version file not found at '$(VersionFilePath)'" />
    <Error Condition="'$(Version)' == ''" Text="Version not defined in '$(VersionFilePath)'" />
  </Target>

</Project>
